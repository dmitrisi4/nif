{"mappings":"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","sources":["<anon>","src/scripts/app.js"],"sourcesContent":["var $f7fca9471e720bd1$exports = {};\nif (document) document.addEventListener(\"DOMContentLoaded\", function() {\n    const LOGIN_URL = \"http://localhost:4000/api/auth/login\";\n    const ORDERS_URL = \"http://localhost:4000/api/order/\";\n    const CONTACTS_URL = \"http://localhost:4000/api/contacts/\";\n    const loginSection = document.getElementById(\"login-section\");\n    const pageSection = document.getElementById(\"page-section\");\n    const btnExitWrapper = document.getElementById(\"btn-exit-wrapper\");\n    const btnExit = document.getElementById(\"btn-exit\");\n    const loginForm = document.getElementById(\"form-login\");\n    const loginEmail = document.getElementById(\"login-email\");\n    const loginPassword = document.getElementById(\"login-password\");\n    const btnOrdersPage = document.getElementById(\"btn-orders-page\");\n    const btnContactsPage = document.getElementById(\"btn-contacts-page\");\n    const orderPage = document.getElementById(\"order-page\");\n    const contactPage = document.getElementById(\"contact-page\");\n    let ordersData;\n    let contactsData;\n    let createdTableOrder = false;\n    let createdTableContacts = false;\n    const svgEdit = `<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"><path d=\"M18.52 4l-1 1H2V4zM2 8v1h11.52l1-1zm4.52 8H2v1h3.655a1.477 1.477 0 0 1 .282-.417zM2 12v1h7.52l1-1zm20.95-6.066a.965.965 0 0 1 .03 1.385L9.825 20.471 5.73 22.227a.371.371 0 0 1-.488-.487l1.756-4.097L20.15 4.491a.965.965 0 0 1 1.385.03zM9.02 19.728l-1.28-1.28-.96 2.24zM20.093 8.79L18.68 7.376 8.382 17.674l1.413 1.414zm1.865-2.445l-.804-.838a.42.42 0 0 0-.6-.007l-1.167 1.17L20.8 8.083l1.152-1.151a.42.42 0 0 0 .006-.587z\"></path><path fill=\"none\" d=\"M0 0h24v24H0z\"></path></g></svg>`;\n    Authorization();\n    // login listener\n    loginForm.addEventListener(\"submit\", (e)=>{\n        e.preventDefault();\n        login(LOGIN_URL, {\n            email: loginEmail.value,\n            password: loginPassword.value\n        });\n    });\n    // exit\n    btnExit.addEventListener(\"click\", ()=>{\n        eraseCookie(\"tokenAuth\");\n        location.reload();\n    });\n    btnContactsPage.addEventListener(\"click\", ()=>{\n        getContacts();\n    });\n    btnOrdersPage.addEventListener(\"click\", ()=>{\n        showOrderPage();\n    });\n    async function login(url, data) {\n        try {\n            const response = await fetch(url, {\n                method: \"POST\",\n                headers: {\n                    \"Content-Type\": \"application/json\"\n                },\n                body: JSON.stringify(data)\n            });\n            const result = await response.json();\n            if (result) {\n                setCookie(\"tokenAuth\", result.token, 60);\n                location.reload();\n            } else alert(\"There was a problem with the request\");\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n    // cookie\n    function setCookie(name, value, minutesToExpire) {\n        let expires = \"\";\n        if (minutesToExpire) {\n            const date = new Date();\n            date.setTime(date.getTime() + minutesToExpire * 60000);\n            expires = \"; expires=\" + date.toUTCString();\n        }\n        document.cookie = name + \"=\" + (value || \"\") + expires + \"; path=/\";\n    }\n    function getCookie(name) {\n        const nameEQ = name + \"=\";\n        const ca = document.cookie.split(\";\");\n        for(let i = 0; i < ca.length; i++){\n            let c = ca[i];\n            while(c.charAt(0) == \" \")c = c.substring(1, c.length);\n            if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);\n        }\n        return null;\n    }\n    function eraseCookie(name) {\n        document.cookie = name + \"=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;\";\n    }\n    async function getOrders() {\n        const tokenAuth = getCookie(\"tokenAuth\");\n        const response = await fetch(ORDERS_URL, {\n            headers: {\n                \"Authorization\": tokenAuth\n            }\n        });\n        ordersData = await response.json();\n        if (response.status === 200) authShowPageContent(ordersData);\n    }\n    async function Authorization() {\n        const tokenAuth = getCookie(\"tokenAuth\");\n        if (tokenAuth) try {\n            getOrders();\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n    async function removeOrder(id) {\n        const tokenAuth = getCookie(\"tokenAuth\");\n        if (tokenAuth) try {\n            const response = await fetch(`${ORDERS_URL}${id}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Authorization\": tokenAuth\n                }\n            });\n            ordersData = await response.json();\n            if (response.status === 200) {\n                createdTableOrder = false;\n                removeTable(\"order-table\");\n                getOrders();\n            }\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n    async function getContacts() {\n        const tokenAuth = getCookie(\"tokenAuth\");\n        if (tokenAuth) try {\n            const response = await fetch(CONTACTS_URL, {\n                headers: {\n                    \"Authorization\": tokenAuth\n                }\n            });\n            contactsData = await response.json();\n            if (response.status === 200) showContactPage();\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n    async function removeContacts(id) {\n        const tokenAuth = getCookie(\"tokenAuth\");\n        if (tokenAuth) try {\n            const response = await fetch(`${CONTACTS_URL}${id}`, {\n                method: \"DELETE\",\n                headers: {\n                    \"Authorization\": tokenAuth\n                }\n            });\n            ordersData = await response.json();\n            if (response.status === 200) {\n                createdTableContacts = false;\n                removeTable(\"contact-table\");\n                getContacts();\n            }\n        } catch (error) {\n            console.error(\"Error:\", error);\n        }\n    }\n    // set query params\n    function addQueryParams(queryParams) {\n        // Get the current URL\n        const currentUrl = window.location.href;\n        // Create a new URL object\n        const newUrl = new URL(currentUrl);\n        // Add the query parameters to the new URL object\n        for(const key in queryParams)newUrl.searchParams.set(key, queryParams[key]);\n        // Set the new URL as the current URL without reloading the page\n        window.history.pushState(null, null, newUrl.href);\n    }\n    function getQueryParams(name) {\n        const query = window.location.search.slice(1);\n        const params = new URLSearchParams(query);\n        return params.get(name);\n    }\n    // content show section\n    function authShowPageContent() {\n        loginSection.style.display = \"none\";\n        pageSection.style.display = \"flex\";\n        btnExitWrapper.style.display = \"flex\";\n        if (!getQueryParams(\"page\") || getQueryParams(\"page\") !== \"contacts\") showOrderPage();\n        if (getQueryParams(\"page\") === \"contacts\") getContacts();\n    }\n    function showContactPage() {\n        orderPage.style.display = \"none\";\n        contactPage.style.display = \"block\";\n        if (!createdTableContacts) createTableContacts(contactsData);\n        addQueryParams({\n            page: \"contacts\"\n        });\n        btnContactsPage.style.borderColor = \"black\";\n    }\n    function showOrderPage() {\n        orderPage.style.display = \"block\";\n        contactPage.style.display = \"none\";\n        if (!createdTableOrder) createTable(ordersData);\n        addQueryParams({\n            page: \"orders\"\n        });\n        btnOrdersPage.style.borderColor = \"black\";\n    }\n    // create element function\n    function dom(tag, className, ...nodes) {\n        const node = document.createElement(tag);\n        if (className.length > 0) node.classList.add(className);\n        node.append(...nodes);\n        return node;\n    }\n    // create btn\n    function domBtn(id, text, event) {\n        const node = document.createElement(\"button\");\n        node.classList.add(\"btn-table\");\n        node.addEventListener(\"click\", ()=>{\n            event(id);\n        });\n        node.innerHTML = text;\n        return node;\n    }\n    // create table\n    function createTable(ordersData) {\n        // title table header\n        const tableHeaders = [\n            \"ID\",\n            \"Name\",\n            \"Last name\",\n            \"Email\",\n            \"Phone number\",\n            \"WhatsApp/ Telegramm\",\n            \"Country\",\n            \"Plan\",\n            \"created\",\n            \"updated\"\n        ];\n        const headerRowArr = tableHeaders.map((colTitle)=>{\n            return dom(\"div\", \"\", colTitle);\n        });\n        const bodyRowArr = ordersData.map((rowData)=>{\n            const colData = Object.values(rowData).map((data)=>{\n                return dom(\"div\", \"\", data);\n            });\n            colData.push(dom(\"div\", \"table-btns-wrap\", ...[\n                domBtn(rowData.id, svgEdit, \"\"),\n                domBtn(rowData.id, \"X\", removeOrder)\n            ]));\n            return dom(\"div\", \"table-row-wrapper\", ...colData);\n        });\n        const rows = [\n            dom(\"div\", \"table-row-header\", ...headerRowArr),\n            dom(\"div\", \"\", ...bodyRowArr)\n        ];\n        // get table container\n        const tableContainer = document.getElementById(\"table-container\");\n        // add table\n        tableContainer.append(dom(\"div\", \"\", ...rows));\n        createdTableOrder = true;\n    }\n    // removeTable\n    function removeTable(name) {\n        const tableContainer = document.getElementById(\"table-container\");\n        const tableContactContainer = document.getElementById(\"table-contacts-container\");\n        if (name === \"order-table\") tableContainer.innerHTML = \"\";\n        if (name === \"contact-table\") tableContactContainer.innerHTML = \"\";\n    }\n    // create table\n    function createTableContacts(contactsData) {\n        // title table header\n        const tableHeaders = [\n            \"ID\",\n            \"Name\",\n            \"Email\",\n            \"Comment\",\n            \"created\",\n            \"updated\"\n        ];\n        const headerRowArr = tableHeaders.map((colTitle)=>{\n            return dom(\"div\", \"\", colTitle);\n        });\n        const bodyRowArr = contactsData.map((rowData)=>{\n            const colData = Object.values(rowData).map((data)=>{\n                return dom(\"div\", \"\", data);\n            });\n            colData.push(dom(\"div\", \"table-btns-wrap\", ...[\n                domBtn(rowData.id, svgEdit, \"\"),\n                domBtn(rowData.id, \"X\", removeContacts)\n            ]));\n            return dom(\"div\", \"contacts-row-wrapper\", ...colData);\n        });\n        const rows = [\n            dom(\"div\", \"contacts-row-header\", ...headerRowArr),\n            dom(\"div\", \"\", ...bodyRowArr)\n        ];\n        // get table container\n        const tableContainer = document.getElementById(\"table-contacts-container\");\n        // add table\n        tableContainer.append(dom(\"div\", \"\", ...rows));\n        createdTableContacts = true;\n    }\n}, false);\n\n\n//# sourceMappingURL=index.df8f9ba5.js.map\n","if (document) {\n\n\tdocument.addEventListener('DOMContentLoaded', function () {\n\t\t\tconst LOGIN_URL = 'http://localhost:4000/api/auth/login';\n\t\t\tconst ORDERS_URL = 'http://localhost:4000/api/order/';\n\t\t\tconst CONTACTS_URL = 'http://localhost:4000/api/contacts/';\n\n\t\t\tconst loginSection = document.getElementById('login-section');\n\t\t\tconst pageSection = document.getElementById('page-section');\n\t\t\tconst btnExitWrapper = document.getElementById('btn-exit-wrapper');\n\t\t\tconst btnExit = document.getElementById('btn-exit');\n\t\t\tconst loginForm = document.getElementById('form-login');\n\t\t\tconst loginEmail = document.getElementById('login-email');\n\t\t\tconst loginPassword = document.getElementById('login-password');\n\n\t\t\tconst btnOrdersPage = document.getElementById('btn-orders-page');\n\t\t\tconst btnContactsPage = document.getElementById('btn-contacts-page');\n\n\t\t\tconst orderPage = document.getElementById('order-page');\n\t\t\tconst contactPage = document.getElementById('contact-page');\n\n\t\t\tlet ordersData;\n\t\t\tlet contactsData;\n\t\t\tlet createdTableOrder = false;\n\t\t\tlet createdTableContacts = false;\n\n\t\t\tconst svgEdit = `<svg viewBox=\"0 0 24 24\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#000000\"><g id=\"SVGRepo_bgCarrier\" stroke-width=\"0\"></g><g id=\"SVGRepo_tracerCarrier\" stroke-linecap=\"round\" stroke-linejoin=\"round\"></g><g id=\"SVGRepo_iconCarrier\"><path d=\"M18.52 4l-1 1H2V4zM2 8v1h11.52l1-1zm4.52 8H2v1h3.655a1.477 1.477 0 0 1 .282-.417zM2 12v1h7.52l1-1zm20.95-6.066a.965.965 0 0 1 .03 1.385L9.825 20.471 5.73 22.227a.371.371 0 0 1-.488-.487l1.756-4.097L20.15 4.491a.965.965 0 0 1 1.385.03zM9.02 19.728l-1.28-1.28-.96 2.24zM20.093 8.79L18.68 7.376 8.382 17.674l1.413 1.414zm1.865-2.445l-.804-.838a.42.42 0 0 0-.6-.007l-1.167 1.17L20.8 8.083l1.152-1.151a.42.42 0 0 0 .006-.587z\"></path><path fill=\"none\" d=\"M0 0h24v24H0z\"></path></g></svg>`;\n\t\n\n\t\t\tAuthorization();\n\t\n\t\t\t// login listener\n\t\t\tloginForm.addEventListener('submit', (e) => {\n\t\t\t\te.preventDefault();\n\t\t\t\tlogin(LOGIN_URL, {email: loginEmail.value, password: loginPassword.value})\n\t\t\t});\n\n\t\t\t// exit\n\t\t\tbtnExit.addEventListener('click', () => {\n\t\t\t\teraseCookie('tokenAuth');\n\t\t\t\tlocation.reload();\n\t\t\t});\n\n\t\t\tbtnContactsPage.addEventListener('click', () => {\n\t\t\t\tgetContacts();\n\t\t\t});\n\n\t\t\tbtnOrdersPage.addEventListener('click', () => {\n\t\t\t\tshowOrderPage(); \n\t\t\t});\n\n\t\t\tasync function login(url, data) {\n\t\t\t\ttry {\n\t\t\t\t\tconst response = await fetch(url, {\n\t\t\t\t\t\tmethod: 'POST',\n\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\"Content-Type\": \"application/json\",\n\t\t\t\t\t\t},\n\t\t\t\t\t\tbody: JSON.stringify(data),\n\t\t\t\t\t});\n\n\t\t\t\t\tconst result = await response.json();\n\t\t\t\t\tif(result) {\n\t\t\t\t\t\tsetCookie('tokenAuth', result.token, 60);\n\t\t\t\t\t\tlocation.reload();\n\t\t\t\t\t} else {\n\t\t\t\t\t\talert('There was a problem with the request')\n\t\t\t\t\t}\n\t\t\t\t} catch (error) {\n\t\t\t\t\tconsole.error(\"Error:\", error);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// cookie\n\t\t\tfunction setCookie(name,value,minutesToExpire) {\n\t\t\t\tlet expires = \"\";\n\t\t\t\tif (minutesToExpire) {\n\t\t\t\t\t\tconst date = new Date();\n\t\t\t\t\t\tdate.setTime(date.getTime() + (minutesToExpire * 60 * 1000));\n\t\t\t\t\t\texpires = \"; expires=\" + date.toUTCString();\n\t\t\t\t}\n\t\t\t\tdocument.cookie = name + \"=\" + (value || \"\")  + expires + \"; path=/\";\n\t\t\t}\n\n\t\t\tfunction getCookie(name) {\n\t\t\t\tconst nameEQ = name + \"=\";\n\t\t\t\tconst ca = document.cookie.split(';');\n\t\t\t\tfor(let i=0;i < ca.length;i++) {\n\t\t\t\t\t\tlet c = ca[i];\n\t\t\t\t\t\twhile (c.charAt(0)==' ') c = c.substring(1,c.length);\n\t\t\t\t\t\tif (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length,c.length);\n\t\t\t\t}\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tfunction eraseCookie(name) {   \n\t\t\t\tdocument.cookie = name +'=; Path=/; Expires=Thu, 01 Jan 1970 00:00:01 GMT;';\n\t\t\t}\n\n\t\t\tasync function getOrders() {\n\t\t\t\tconst tokenAuth = getCookie('tokenAuth');\n\t\t\t\tconst response = await fetch(ORDERS_URL, {\n\t\t\t\t\theaders: {\n\t\t\t\t\t\t\"Authorization\": tokenAuth,\n\t\t\t\t\t},\n\t\t\t\t});\n\t\t\t\tordersData = await response.json();\n\n\t\t\t\tif (response.status === 200) {\n\t\t\t\t\tauthShowPageContent(ordersData);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tasync function Authorization() {\n\t\t\t\tconst tokenAuth = getCookie('tokenAuth');\n\t\t\t\tif(tokenAuth) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tgetOrders();\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(\"Error:\", error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tasync function removeOrder(id) {\n\t\t\t\tconst tokenAuth = getCookie('tokenAuth');\n\t\t\t\tif(tokenAuth) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`${ORDERS_URL}${id}`, {\n\t\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\"Authorization\": tokenAuth,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tordersData = await response.json();\n\n\t\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\t\tcreatedTableOrder = false;\n\t\t\t\t\t\t\tremoveTable('order-table');\n\t\t\t\t\t\t\tgetOrders();\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(\"Error:\", error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tasync function getContacts() {\n\t\t\t\tconst tokenAuth = getCookie('tokenAuth');\n\t\t\t\tif(tokenAuth) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(CONTACTS_URL, {\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\"Authorization\": tokenAuth,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tcontactsData = await response.json();\n\n\t\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\t\tshowContactPage();\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(\"Error:\", error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tasync function removeContacts(id) {\n\t\t\t\tconst tokenAuth = getCookie('tokenAuth');\n\t\t\t\tif(tokenAuth) {\n\t\t\t\t\ttry {\n\t\t\t\t\t\tconst response = await fetch(`${CONTACTS_URL}${id}`, {\n\t\t\t\t\t\t\tmethod: 'DELETE',\n\t\t\t\t\t\t\theaders: {\n\t\t\t\t\t\t\t\t\"Authorization\": tokenAuth,\n\t\t\t\t\t\t\t},\n\t\t\t\t\t\t});\n\t\t\t\t\t\tordersData = await response.json();\n\n\t\t\t\t\t\tif (response.status === 200) {\n\t\t\t\t\t\t\tcreatedTableContacts = false;\n\t\t\t\t\t\t\tremoveTable('contact-table');\n\t\t\t\t\t\t\tgetContacts();\n\t\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t} catch (error) {\n\t\t\t\t\t\tconsole.error(\"Error:\", error);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t// set query params\n\t\t\tfunction addQueryParams(queryParams) {\n\t\t\t\t// Get the current URL\n\t\t\t\tconst currentUrl = window.location.href;\n\t\t\t\n\t\t\t\t// Create a new URL object\n\t\t\t\tconst newUrl = new URL(currentUrl);\n\t\t\t\n\t\t\t\t// Add the query parameters to the new URL object\n\t\t\t\tfor (const key in queryParams) {\n\t\t\t\t\tnewUrl.searchParams.set(key, queryParams[key]);\n\t\t\t\t}\n\t\t\t\n\t\t\t\t// Set the new URL as the current URL without reloading the page\n\t\t\t\twindow.history.pushState(null, null, newUrl.href);\n\t\t\t}\n\n\t\t\tfunction getQueryParams(name) {\n\t\t\t\tconst query = window.location.search.slice(1);\n\t\t\t\tconst params = new URLSearchParams(query);\n\n\t\t\t\treturn params.get(name);\n\t\t\t}\n\n\t\t\t// content show section\n\t\t\tfunction authShowPageContent() {\n\t\t\t\tloginSection.style.display = 'none';\n\t\t\t\tpageSection.style.display = 'flex';\n\t\t\t\tbtnExitWrapper.style.display = 'flex';\n\t\t\t\t\n\t\t\t\tif (!getQueryParams('page') || getQueryParams('page') !== 'contacts') {\n\t\t\t\t\tshowOrderPage();\n\t\t\t\t}\n\n\t\t\t\tif (getQueryParams('page') === 'contacts') {\n\t\t\t\t\tgetContacts();\t\t\t\t\t\n\t\t\t\t}\n\t\t\t\t\n\t\t\t};\n\n\t\t\tfunction showContactPage() {\n\t\t\t\torderPage.style.display = 'none';\n\t\t\t\tcontactPage.style.display = 'block';\n\t\t\t\tif (!createdTableContacts) createTableContacts(contactsData);\n\t\t\t\taddQueryParams({ page: 'contacts' });\n\t\t\t\tbtnContactsPage.style.borderColor = 'black';\n\t\t\t}\n\n\t\t\tfunction showOrderPage() {\n\t\t\t\torderPage.style.display = 'block';\n\t\t\t\tcontactPage.style.display = 'none';\n\t\t\t\tif (!createdTableOrder) createTable(ordersData);\n\t\t\t\taddQueryParams({ page: 'orders' });\n\t\t\t\tbtnOrdersPage.style.borderColor = 'black';\n\t\t\t}\n\n\t\t\t// create element function\n\t\t\tfunction dom(tag, className, ...nodes) {\n\t\t\t\tconst node = document.createElement(tag);\n\t\t\t\tif (className.length > 0) node.classList.add(className);\n\t\t\t\tnode.append(...nodes);\n\t\t\t\treturn node;\n\t\t}\n\n\t\t// create btn\n\t\tfunction domBtn(id, text, event) {\n\t\t\tconst node = document.createElement('button');\n\t\t\tnode.classList.add('btn-table');\n\t\t\tnode.addEventListener('click', () => {\n\t\t\t\tevent(id);\n\t\t\t});\n\t\t\tnode.innerHTML = text;\n\t\t\treturn node;\n\t\t}\n\n\t\t// create table\n\t\tfunction createTable(ordersData) {\n\t\t\t// title table header\n\t\t\tconst tableHeaders = ['ID', 'Name', 'Last name', 'Email', 'Phone number', 'WhatsApp/ Telegramm', 'Country', 'Plan', 'created', 'updated'];\n\n\t\t\tconst headerRowArr = tableHeaders.map(colTitle => {\n\t\t\t\treturn dom('div', '', colTitle);\n\t\t\t});\n\t\t\tconst bodyRowArr = ordersData.map(rowData => {\n\t\t\t\tconst colData = Object.values(rowData).map(data => {\n\t\t\t\t\treturn dom('div', '', data);\n\t\t\t\t});\n\t\t\t\tcolData.push(dom('div', 'table-btns-wrap', ...[ domBtn(rowData.id, svgEdit, ''), domBtn(rowData.id, 'X', removeOrder )]));\n\t\t\t\treturn dom('div', 'table-row-wrapper', ...colData);\n\t\t\t});\n\n\t\t\tconst rows = [\n\t\t\t\tdom('div', 'table-row-header', ...headerRowArr),\n\t\t\t\tdom('div', '', ...bodyRowArr)\n\t\t\t];\n\n\t\t\t\t// get table container\n\t\t\t\tconst tableContainer = document.getElementById(\"table-container\");\n\t\t\t\t// add table\n\t\t\t\ttableContainer.append(dom('div', '', ...rows));\n\t\t\t\tcreatedTableOrder = true;\n\t\t};\n\n\t\t// removeTable\n\t\tfunction removeTable(name) {\n\t\t\tconst tableContainer = document.getElementById(\"table-container\");\n\t\t\tconst tableContactContainer = document.getElementById(\"table-contacts-container\");\n\t\t\tif(name === 'order-table') tableContainer.innerHTML = '';\n\t\t\tif(name === 'contact-table') tableContactContainer.innerHTML = '';\n\t\t};\n\n\n\t\t// create table\n\t\tfunction createTableContacts(contactsData) {\n\t\t\t// title table header\n\t\t\tconst tableHeaders = ['ID', 'Name', 'Email', 'Comment', 'created', 'updated'];\n\n\t\t\tconst headerRowArr = tableHeaders.map(colTitle => {\n\t\t\t\treturn dom('div', '', colTitle);\n\t\t\t});\n\t\t\t\n\t\t\tconst bodyRowArr = contactsData.map(rowData => {\n\t\t\t\tconst colData = Object.values(rowData).map(data => {\n\t\t\t\t\treturn dom('div', '', data);\n\t\t\t\t});\n\t\t\t\tcolData.push(dom('div', 'table-btns-wrap', ...[ domBtn(rowData.id, svgEdit, ''), domBtn(rowData.id, 'X', removeContacts )]));\n\t\t\t\treturn dom('div', 'contacts-row-wrapper', ...colData);\n\t\t\t});\n\n\t\t\tconst rows = [\n\t\t\t\tdom('div', 'contacts-row-header', ...headerRowArr),\n\t\t\t\tdom('div', '', ...bodyRowArr)\n\t\t\t];\n\n\t\t\t\t// get table container\n\t\t\t\tconst tableContainer = document.getElementById(\"table-contacts-container\");\n\t\t\t\t// add table\n\t\t\t\ttableContainer.append(dom('div', '', ...rows));\n\t\t\t\tcreatedTableContacts = true;\n\t\t}\n\n\n\t}, false);\n};"],"names":["document","addEventListener","ordersData","contactsData","ORDERS_URL","CONTACTS_URL","loginSection","getElementById","pageSection","btnExitWrapper","btnExit","loginForm","loginEmail","loginPassword","btnOrdersPage","btnContactsPage","orderPage","contactPage","createdTableOrder","createdTableContacts","svgEdit","login","url","data","response","fetch","method","headers","body","JSON","stringify","result","json","setCookie","name","value","minutesToExpire","expires","date","Date","setTime","getTime","toUTCString","cookie","token","location","reload","alert","error","console","getCookie","nameEQ","ca","split","i","length","c","charAt","substring","indexOf","getOrders","tokenAuth","status","style","display","getQueryParams","showOrderPage","getContacts","removeOrder","id","removeTable","createTableContacts","headerRowArr","tableHeaders","map","colTitle","dom","bodyRowArr","rowData","colData","Object","values","push","domBtn","removeContacts","rows","tableContainer","append","addQueryParams","page","borderColor","queryParams","currentUrl","window","href","newUrl","URL","key","searchParams","set","history","pushState","query","search","slice","params","URLSearchParams","get","createTable","tag","className","nodes","node","createElement","classList","add","text","event","innerHTML","tableContactContainer","Authorization","e","preventDefault","email","password"],"version":3,"file":"index.df8f9ba5.js.map"}